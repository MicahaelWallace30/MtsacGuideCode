#pragma config(Sensor, in1,    sharp,          sensorPotentiometer)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//
/*
Michael Wallace
6/15/2015
MT SAC VEX ROBOTICS Guide to new robotic programmers

Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
*/
//warning!!!!
//if sensotPort as parameter is not working just replace with desired sensor name
//ex SensorValue('xxxxxxxx')

//GP2Y0A41SK0F
//4cm to 30cm
//Linearizing Sharp Ranger Data
//https://acroname.com/articles/linearizing-sharp-ranger-data
//DOES NOT CHECK OUT OF RANGE VALUES
int IRValue(tSensors sensorPort)
{
	float const M = 0.00008944;
	float const B = 0.007849;
	float const K = 1;

	return 1.0 / (M * SensorValue[sensorPort] + B) - K;
}

//GP2Y0A41SK0F
//4cm to 30cm
//power fit
int IRValuePower(tSensors sensorPort, int const MIN = 4, int const MAX = 30)
{
	float const A = 5662;
	float const B = -0.9287;

	int value = A * pow(SensorValue[sensorPort], B);

	if(value < MIN) value = MIN;
	else if(value > MAX) value = MAX;
	return  value;
}
